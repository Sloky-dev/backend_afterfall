// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  PLAYER
  ADMIN
  SURVIVOR
}

model User {
  id        String   @id @default(uuid()) @db.Uuid
  email     String   @unique
  password  String
  pseudonym String   @unique
  level     Int      @default(1)
  pseudonymUpdatedAt DateTime?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  locale    String   @default("fr")
  role      Role     @default(PLAYER)
  gameSessions  GameSession[] @relation("GameSessionCreator")
  playerSessions PlayerSession[]
}

model GameSession {
  id         String   @id @default(uuid()) @db.Uuid
  createdAt  DateTime @default(now())
  createdBy  String   @db.Uuid
  creator    User     @relation("GameSessionCreator", fields: [createdBy], references: [id])
  players    PlayerSession[]
}

model PlayerSession {
  id         String   @id @default(uuid()) @db.Uuid
  gameId     String   @db.Uuid
  game       GameSession @relation(fields: [gameId], references: [id])
  userId     String   @db.Uuid
  user       User     @relation(fields: [userId], references: [id])
  pseudonym  String
  token      String   @unique
  connected  Boolean  @default(true)
  lastSeenAt DateTime @default(now())

  @@index([gameId])
  @@index([userId])
}
